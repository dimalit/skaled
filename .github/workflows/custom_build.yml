name: Custom Docker and Binary

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name'
        default: ''
        required: true
      image_version:
        description: 'Image version for docker hub'
        default: ''
        required: true

jobs:
  main_job:
    runs-on: ubuntu-18.04 
    env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Extract repo name
        run:   echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
        shell: bash
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: checkout
        uses: actions/checkout@v1
        with:
          ref: ${{ github.event.inputs.branch_name }}
      - name: Submodule update
        run: git submodule update --init --recursive
      - name: update apt
        run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test;
      - name: Free disk space
        run: |
          sudo apt-get remove -yq libjsoncpp-dev aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            clang-6.0 lldb-6.0 lld-6.0 clang-format-6.0 clang-8 lldb-8 lld-8 clang-format-8 \
            clang-9 lldb-9 lld-9 clangd-9 clang-format-9 dotnet-sdk-3.0 dotnet-sdk-3.1=3.1.101-1 \
            esl-erlang firefox g++-8 g++-9 gfortran-8 gfortran-9 google-chrome-stable >/dev/null 2>&1;
      - name: Free more disk space
        run: |
          sudo apt-get remove -yq  \
            google-cloud-sdk ghc-8.0.2 ghc-8.2.2 ghc-8.4.4 ghc-8.6.2 ghc-8.6.3 ghc-8.6.4 \
            ghc-8.6.5 ghc-8.8.1 ghc-8.8.2 ghc-8.8.3 ghc-8.10.1 cabal-install-2.0 cabal-install-2.2 \
            cabal-install-2.4 cabal-install-3.0 cabal-install-3.2 heroku imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete mysql-client libmysqlclient-dev \
            mysql-server mssql-tools unixodbc-dev yarn bazel chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev php7.1 php7.1-bcmath \
            php7.1-bz2 php7.1-cgi php7.1-cli php7.1-common php7.1-curl php7.1-dba php7.1-dev \
            php7.1-enchant php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-interbase php7.1-intl \
            php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql php7.1-odbc \
            php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-readline php7.1-recode \
            php7.1-snmp php7.1-soap php7.1-sqlite3 php7.1-sybase php7.1-tidy php7.1-xml \
            php7.1-xmlrpc php7.1-xsl php7.1-zip php7.2 php7.2-bcmath php7.2-bz2 php7.2-cgi \
            php7.2-cli php7.2-common php7.2-curl php7.2-dba php7.2-dev php7.2-enchant php7.2-fpm \
            php7.2-gd php7.2-gmp php7.2-imap php7.2-interbase php7.2-intl php7.2-json php7.2-ldap \
            php7.2-mbstring php7.2-mysql php7.2-odbc php7.2-opcache php7.2-pgsql php7.2-phpdbg \
            php7.2-pspell php7.2-readline php7.2-recode php7.2-snmp php7.2-soap php7.2-sqlite3 \
            php7.2-sybase php7.2-tidy php7.2-xml php7.2-xmlrpc php7.2-xsl php7.2-zip php7.3 \
            php7.3-bcmath php7.3-bz2 php7.3-cgi php7.3-cli php7.3-common php7.3-curl php7.3-dba \
            php7.3-dev php7.3-enchant php7.3-fpm php7.3-gd php7.3-gmp php7.3-imap php7.3-interbase \
            php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-odbc \
            php7.3-opcache php7.3-pgsql php7.3-phpdbg php7.3-pspell php7.3-readline php7.3-recode \
            php7.3-snmp php7.3-soap php7.3-sqlite3 php7.3-sybase php7.3-tidy php7.3-xml \
            php7.3-xmlrpc php7.3-xsl php7.3-zip php7.4 php7.4-bcmath php7.4-bz2 php7.4-cgi \
            php7.4-cli php7.4-common php7.4-curl php7.4-dba php7.4-dev php7.4-enchant php7.4-fpm \
            php7.4-gd php7.4-gmp php7.4-imap php7.4-interbase php7.4-intl php7.4-json php7.4-ldap \
            php7.4-mbstring php7.4-mysql php7.4-odbc php7.4-opcache php7.4-pgsql php7.4-phpdbg \
            php7.4-pspell php7.4-readline php7.4-snmp php7.4-soap php7.4-sqlite3 php7.4-sybase \
            php7.4-tidy php7.4-xml php7.4-xmlrpc php7.4-xsl php7.4-zip php-amqp php-apcu \
            php-igbinary php-memcache php-memcached php-mongodb php-redis php-xdebug \
            php-zmq snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org  || true > /dev/null 2>&1;

      - name: Cleanup
        run: |
          sudo apt-get autoremove -y >/dev/null 2>&1 && \
          sudo apt-get autoclean -y >/dev/null 2>&1  && \
          sudo rm -rf /usr/local/lib/android >/dev/null 2>&1 && \
          docker rmi $(docker image ls -aq) >/dev/null 2>&1

      - name: Install packages
        run: |
          sudo apt-get update; sudo apt-get install -yq build-essential gcc-7 g++-7 \
          make ccache libtool pkg-config autoconf autogen automake autopoint \
          python python-pip sed shtool texinfo gperf gawk wget git flex bison yasm \
          clang-format-6.0 btrfs-progs doxygen vim nettle-dev gnutls-dev \
          libhiredis-dev redis-server google-perftools libgoogle-perftools-dev lcov

      - name: Install cmake 3.10
        run: |
          sudo apt-get remove cmake || true
          wget --no-check-certificate https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.sh && \
          chmod +x cmake-3.10.0-Linux-x86_64.sh && \
          ./cmake-3.10.0-Linux-x86_64.sh --skip-license --include-subdir && \
          sudo ln -sf `pwd`/cmake-3.10.0-Linux-x86_64/bin/* /usr/local/bin

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      - name: Ccache cache files
        uses: actions/cache@v1.1.0
        with:
          path: .ccache
          key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
          restore-keys: |
            ${ { matrix.config.name } }-ccache-
      - name: Build dependencies
        run: |
          export CC=gcc-7
          export CXX=g++-7
          export TARGET=all
          export CMAKE_BUILD_TYPE=Debug
          cd deps
          ./build.sh PARALLEL_COUNT=$(nproc)
          cd ..
      - name: Configure all
        run: |
          export CC=gcc-7
          export CXX=g++-7
          export TARGET=all
          export CMAKE_BUILD_TYPE=Debug
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE  ..
          cd ..
      - name: Build all
        run: |
          export CC=gcc-7
          export CXX=g++-7
          export TARGET=all
          export CMAKE_BUILD_TYPE=Debug
          cd build
          make -j$(nproc)
          cd ..

      - name: Build and publish container
        run: |
          cp build/skaled/skaled scripts/skale_build/executable/
          export BRANCH=${{ github.event.inputs.branch_name }}
          export VERSION=${{ github.event.inputs.image_version }}
          echo "Version $VERSION"
          export RELEASE=true
          bash ./scripts/build_and_publish.sh
          
      - name: Upload skaled binary as artifact 
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: skaled
          path: ./build/skaled/skaled
